Word,Count
the,207
*,156
to,65
of,65
,56
for,53
is,53
a,51
=,43
@param,35
in,34
},34
question,32
exam,31
array,29
and,28
new,25
number,25
//,24
if,24
{,23
student,23
catch,22
TODO,21
an,20
be,20
from,20
Auto-generated,20
<co>,20
int,19
block,19
This,17
response,16
each,16
with,16
create,15
will,15
used,15
all,14
name,14
QR,14
just,14
+,14
actual,14
this,13
questions,13
public,13
class,12
String,12
answer,12
get,12
not,12
are,11
file,11
through,11
on,10
static,10
numbers,10
that,10
responses,10
it,9
holds,9
which,9
points,9
course,9
otherwise,9
generate,9
read,8
call,8
\question_text,\,8
when,8
or,8
method,8
\"\\,8
private,8
testing,8
set,8
\exam_id,\,8
@return,7
codes,7
i,7
add,7
PDF,7
void,7
by,7
pages,7
I,7
open,6
no,6
convert,6
choices,6
debugging,6
coordinates,6
choice,6
next,6
test,6
true,6
also,6
list,6
correct,6
bounds,6
page,6
only,6
strings,6
database,6
found,6
manual,6
constructor,6
-,6
\point_value,\,6
It,6
code,6
normal,5
image,5
so,5
here,5
items,5
was,5
\question_id,\,5
false,5
possible,5
If,5
as,5
needed,5
pdf,5
ordering,5
object,5
multiple,5
item,5
can,5
grader,5
return,5
The,5
loop:,4
Create,4
grade,4
barcode,4
src,4
don't,4
Returns,4
(int,4
\pixels"\,\,4
accepted,4
e),4
qrcode,4
created,4
Student,4
into,4
rectangle,4
added,4
given,4
it's,4
make,4
converter,4
Response,4
they,4
iterates,4
Exam,4
>,4
<sb>,4
text,4
@throws,4
HTML,4
student's,4
think,4
e,4
\Otherwise,\,3
\super(question_id,\,3
Generates,3
classes,3
ID,3
changed,3
stock,3
stub,3
\questionText,\,3
these,3
File,3
necessary,3
-1,3
True,3
preferences,3
piece,3
info,3
exam_id,3
0),3
string,3
particular,3
key,3
isn't,3
q,3
:,3
removed,3
\pointValue,\,3
fill,3
getQuestions,3
result,3
Tavares,3
(Exception,3
directory,3
following,3
combobox,3
there,3
\db"\);\,3
2,3
\questions,\,3
now,3
Randomize,3
qrCode,3
try,3
exams,3
going,3
MultipleChoiceQuestion,3
specified,3
images,3
user,3
Alyssa,3
generates,3
have,3
called,3
frame,3
error,3
e.printStackTrace();,3
them,3
up,3
goes,3
information,3
because,3
Provides,3
gets,3
has,3
\System.out.println("\setting\,3
should,3
<SB>,3
value,3
needed;,3
breaks,2
\null,\,2
//debugging,2
qrStrings,2
increase,2
answers,2
right,2
\information,\,2
[0],2
\"\.gif\"\></img>\,2
use,2
TestGUI:,2
\System.out.println("\added\,2
exceptions,2
recorded,2
main(String[],2
grades,2
\ID,\,2
existing,2
content,2
either,2
successfully,2
String[],2
System.currentTimeMillis();,2
chosen,2
\number,\,2
HTMLGenerator,2
ArrayList<String>,2
identified,2
bufferedimages,2
ArrayList<Response>,2
\=\"\"\\,2
more,2
\ordering,\,2
shapes,2
doc,2
making,2
version,2
combo,2
box,2
correctChoice,2
DatabaseImporter,2
she,2
such,2
where,2
other,2
awarded,2
been,2
For,2
some,2
cannot,2
responsible,2
qrCodes,2
DocumentException,2
rest,2
(val.length(),2
than,2
Outside,2
boundary,2
Add,2
before,2
see,2
creation,2
point_value){,2
constants,2
answer_id,2
reason,2
arrayList,2
id,2
-1;,2
writer,2
drawing,2
studentID,2
(empty),2
val,2
date,2
TrueOrFalseQuestion(int,2
args),2
questions.add(q);,2
examID,2
mc,2
exam_id);,2
qr,2
0,2
adding,2
HTMLGenerator(e);,2
\r,\,2
main(String,2
Question,2
GUI,2
showing,2
line,2
False,2
header,2
null,2
System.out.println(q.toString());,2
db,2
since,2
document,2
wanted,2
after,2
work,2
attempt,2
\question"\);\,2
Inside,2
random,2
question_id,2
but,2
Used,2
TO,2
two,2
parts:,2
interpreter,2
questionNum,2
\MultipleChoiceQuestion("\Why\,2
then,2
==,2
QRCode,2
know,2
answerNum,2
size,2
load,2
I'm,2
declare,2
loop,2
Is,2
\directory"\);\,2
Shawn,2
Course,2
ExamGenerator.getExam();,2
already,2
draw,2
index,2
\found,\,2
dropdown,2
go,2
everything,2
\"\Because\,2
define,2
1,2
deleted,2
examNumberTextField.getText().trim();,2
returned,2
long,2
JPEG,2
any,2
one,2
really,2
(ie,2
point_value);,2
MultipleChoiceQuestion(int,2
calls,2
IOException,2
write,2
out,2
true);,2
files,2
Index,2
were,2
why,2
we,2
point,2
is_answer,2
gen,2
\course,\,2
way,2
versionNum,2
possibilities,2
Overrides,2
0;,2
splits,2
//here,2
path,2
[1],2
rect,2
manually,2
arrays,2
v,2
Paragraph[],1
Gets,1
CLASS,1
writes,1
universal,1
\student,\,1
question_id;,1
true/false,1
correctChoice){,1
never,1
i++),1
associate,1
\TrueOrFalseQuestion(question_id,\,1
RESPONSE,1
\Choice,\,1
converter.convert(exam);,1
\a1,\,1
\Exam("\Test\,1
fileDirectory,1
\file."\);\,1
GETTERS,1
like,1
(i%6==0){,1
declared;,1
compared,1
missing),1
source,1
document.open();,1
instanceof,1
small,1
\2014"\);\,1
\QRCodeHandler.generateQRCode("\1"\,\,1
PDFtoImage,1
args[]){,1
ordered,1
\Course"\,\,1
if(question_type,1
filepath),1
type,1
sure,1
\"\150\,1
End,1
QRStringInterpreter.interpret(x);,1
main,1
\exam.generateExamDocument("\wtf.pdf"\);\,1
grouped,1
exam.addQuestion(q1);,1
what,1
\pixels!"\,\,1
currently,1
\output.println("\<tr><td><img\,1
object:,1
static),1
ex),1
fucking,1
correctChoice;,1
barcodes,1
cast,1
document.setHeader(header);,1
Mark,1
every,1
\frame,\,1
instructions,1
term,1
(name,1
doesn't,1
150);,1
comment,1
finally,1
0);,1
q1,1
Called,1
Answer,1
\output.println("\<tr><td\,1
original,1
\responses,\,1
\5,\,1
automatically,1
loves,1
\gen.generateHTML(chooser.getCurrentDirectory().toString(),\,1
choices[];,1
queue,1
RESULT,1
r:,1
held,1
unclear,1
\215,\,1
\QRCodeHandler.GenerateQRCode("\here150.gif"\,\,1
dependencies,1
show,1
//testing,1
Otherwise,1
3){,1
chooser,1
scanned),1
dialog,1
MultipleChoiceQuestion){,1
\{"\Because\,1
filter,1
=0;,1
\java.io.File("\."\));\,1
takes,1
q2,1
(Response,1
taken,1
boxes,1
p,1
(A,1
null;,1
want,1
selected,1
Phrase(course.getName(),1
clip,1
Document,1
startime,1
message,1
\output.println("\</tr><tr>"\);\,1
Print,1
save,1
course);,1
interaction,1
frames,1
pointValue),1
memory,1
\a2,\,1
(not,1
isRandomized,1
\preferences,\,1
guaranteed,1
collection,1
\chooser.setDialogTitle("\Choose\,1
retains,1
hold,1
\q,\,1
\angry?"\,\,1
width,1
this.question_text,1
variables,1
HeaderFooter(new,1
at,1
\awesome.</td></tr>"\);\,1
System.out.println(chooser.getCurrentDirectory().toString());,1
assuming,1
program,1
default,1
||,1
GUI;,1
dest,1
OpenResponseQuestion(int,1
delegated,1
reader,1
provided,1
text-based,1
itself,1
duplicates,1
Number,1
directly,1
An,1
had,1
JPanel()),1
/images/,1
shuffle,1
answers),1
less,1
Parameters,1
within,1
code's,1
give,1
longer,1
ImageViewer,1
values,1
\course.getTerm()),\,1
PDFtoImage.convert(new,1
parameters,1
ex.printStackTrace();,1
Code,1
without,1
coverPageInstructions,1
luminance,1
i<150;,1
highlight,1
containing,1
FileFilter(){,1
\QRCodeHandler.GenerateQRCode("\here10.gif"\,\,1
ARRAY,1
array;,1
correctly,1
regarding,1
Decoding,1
Sum,1
pass,1
(FileNotFoundException,1
USED,1
handles,1
di.getQuestions(1);,1
DatabaseImporter();,1
(will,1
response_text){,1
question_text;,1
\(question_text,\,1
\gen.generateHTML("\C:\\Users\\Shawnski\\Desktop\\SampleOutput"\,\,1
accepts,1
\filled,\,1
Jesus,1
(Answer,1
10);,1
possible;,1
button,1
getDescription(),1
//don't,1
JFileChooser.APPROVE_OPTION){,1
(Question,1
reference,1
choices.size()),1
natural,1
Launch,1
directories,1
provided;,1
System.out.println(chooser.getSelectedFile());,1
When,1
toAdd),1
Display,1
args[]),1
possibly,1
uncertain,1
classPanel,1
\System.out.println("\calling\,1
25);,1
increment,1
JFileChooser();,1
associative,1
pointValue;,1
\twice,\,1
MC,1
red,1
working,1
\"\Anagrams"\,\,1
cover,1
inside,1
directory),1
randomized,1
\output.println(/*"\<td>"\\,1
Main,1
\duplicated,\,1
student++),1
questionText,1
\"\Bananas"\,\,1
names,1
unknown,1
available,1
missing,1
};,1
getting,1
determine,1
can't,1
sake,1
displays,1
Caitlyn,1
needs,1
Yeah,1
compares,1
named,1
resulting,1
orderings,1
(more,1
non-multiple,1
\OpenResponseQuestion(question_id,\,1
test_id...,1
originally,1
r<5;,1
Image,1
Constructor,1
markings,1
edit,1
later;,1
(chooser.showOpenDialog(new,1
printed,1
getAnswers(test_id);,1
res,1
\data,\,1
constructer,1
MAX_RESPONSES,1
throws,1
q++),1
checks,1
\"\100\,1
errorDisplay.main(args);,1
SIZE);,1
case,1
warning,1
\QRCodeHandler.GenerateQRCode("\here50.gif"\,\,1
Determines,1
exclusively,1
how,1
answer_id),1
System.out.println(r);,1
Accept,1
says,1
including,1
args,1
num,1
\.</td></tr>"\);\,1
known,1
probably,1
\"\Mr\,1
according,1
HeaderFooter,1
same,1
Converts,1
Date,1
interprets,1
Key),1
\Cat"\,\,1
Load,1
\"\Auto-immune\,1
false);,1
large,1
ADDED,1
definitively,1
library,1
\"\BLAH"\,\,1
stream,1
\Exam("\Practice\,1
getQuestions:,1
works,1
purposes,1
50);,1
exists,1
may,1
viewer.displayImage(bufferedImages[i]);,1
\choices,\,1
document.close();,1
\Shawn."\,\,1
addStudent(student);,1
else,1
NOW,1
boolean,1
selections,1
bufferedimage,1
h,1
\QRCodeHandler.GenerateQRCode("\here100.gif"\,\,1
something,1
questionText;,1
\problem,\,1
null),1
four,1
setPointValue(int,1
connected,1
answer_id;,1
exam.addQuestion(q2);,1
temporary,1
\"\,\,1
setQuestionText(String,1
di=,1
functions,1
enrolled,1
4,1
ONLY,1
\"\25\,1
appropriate,1
response_id,1
bufferedImages.length;,1
said,1
data,1
ensure,1
instructor,1
Hypothetically,1
Once,1
pushes,1
\super(question_text,\,1
[student][question],1
\disease"\};\,1
tests,1
\Test1"\,\,1
correct;,1
RectangleBoundary,1
accept(File,1
GET,1
\"\50\,1
resolved,1
Ys,1
<img,1
global,1
value),1
sample,1
arraylist,1
copy,1
\points,\,1
Orion,1
\System.out.println("\Error\,1
unexpected,1
e.getMessage());,1
attempting,1
aren't,1
provide,1
correctChoice);,1
FileFilter,1
validation,1
who,1
returns,1
\System.out.println("\Returned:\,1
shouldn't,1
Provices,1
pointing,1
THE,1
maxPoints,1
\in,\,1
\"\A\,1
marks,1
\q.setQuestionQRCode(this.getName(),\,1
production,1
incorporated,1
colspan=2>All,1
successful;,1
\codes,\,1
\otherwise,\,1
how..,1
JFileChooser,1
questions),1
q<100;,1
boundingBox,1
bounding,1
ImageViewer();,1
indicating,1
58);,1
\"\Unable\,1
converted,1
(exam,1
generated,1
go;,1
class),1
\array,\,1
rectangles,1
[student][question][response],1
purposes:,1
from:,1
\JOptionPane.showMessageDialog(null,\,1
jagged,1
\Course("\Test\,1
Default,1
pleaceholder,1
PDFtoImage();,1
specify,1
code;,1
exam_id;,1
response_text;,1
\"\10\,1
(DocumentException,1
System.out.println(endTime-startime);,1
intended,1
gives,1
Specific,1
question_type;,1
unless,1
document.add(p);,1
\QRCodeHandler.GenerateQRCode("\here25.gif"\,\,1
No,1
numChoices,1
rect.width,1
\bowtie"\,\,1
booleans,1
a1,1
input,1
final,1
(since,1
one:,1
\System.out.println("\Could\,1
handled,1
Removed,1
i++){,1
q=0;,1
identifies,1
AdminGUI,1
application,1
Xs,1
chooser.setCurrentDirectory(new,1
chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);,1
\File("\input.pdf"\));\,1
\testCreation("\"\);\,1
\items,\,1
POINTS,1
leaves,1
Overshadowed,1
First,1
shit,1
cool,1
gui;,1
html,1
toAdd,1
handler,1
\getAnswers"\);\,1
\"\.*/"\<td>\,1
could,1
running,1
notifications,1
associates,1
position,1
Document();,1
old,1
ClassesGUI:,1
loading,1
@Override,1
undetected,1
look,1
display,1
);,1
\File("\C:\\Orion\\newsampleexam.pdf"\);\,1
you,1
Multiple,1
(choices.size(),1
\x,y\,1
\directory.getName().toLowerCase().endsWith("\.pdf"\);\,1
generateExamDocument(String,1
Saves,1
Object,1
(question,1
(Paragraph,1
(i%6==0),1
identifier,1
errors,1
being,1
BufferedImage,1
q.getFormattedPDFSection();,1
window,1
count,1
done,1
viewer,1
\1,\,1
\Exam"\,\,1
response_text.toArray(),1
single,1
near,1
1);,1
its,1
loaded,1
res),1
These,1
whether,1
QRStringInterpreter.interpret(chooser.getSelectedFile());,1
\awesome?"\,\,1
only:,1
match..,1
accept,1
establish,1
questionText),1
nice..,1
graded),1
100);,1
ArrayList<Answer>,1
A,1
\exams,\,1
via,1
FileOutputStream(filepath));,1
(questions[q],1
chooser.setFileFilter(filter);,1
check,1
\[student][question],\,1
easier,1
\{"\Pickles"\,\,1
this.point_value,1
s###q###i###,1
background,1
return;,1
r,1
understand,1
class?,1
duplicated,1
<,1
causes,1
repsponse_text,1
preferred,1
Eventually,1
\File("\exam.pdf"\);\,1
per,1
\4,\,1
\"\Fall\,1
r++),1
a.toString());,1
correctChoice),1
Removes,1
rect.height,1
normally,1
x,1
three,1
time,1
this.response_text,1
work..,1
this.name,1
works),1
white,1
pointValue,1
farthest,1
SETTERS,1
requires,1
2x2,1
\so"\};\,1
liking,1
iterate,1
\case,\,1
rendering,1
initializes,1
established,1
variable,1
header.setAlignment(Element.ALIGN_CENTER);,1
indicates,1
questions;,1
section,1
telling,1
results,1
many,1
close,1
about,1
exactly,1
second,1
di.getAnswers(1);,1
overwritten,1
removal,1
endTime,1
aka,1
Collection<Question>,1
Name,1
G4J,1
In,1
for(int,1
//logic,1
Adds,1
SQLException,1
shape,1
\</td>"\);\,1
\coordinates,\,1
super,1
Frame,1
2);,1
Simplified,1
populated,1
</td><td>Here,1
arguments,1
skip,1
non-exsistant,1
Reads,1
referenced,1
That,1
pdf:,1
HOLD:,1
equal,1
Make,1
part,1
i=0;,1
height,1
issue,1
things,1
due,1
So,1
student<100;,1
thread,1
streams,1
\PdfWriter.getInstance(document,\,1
until,1
first,1
ManualGrader.java,1
3d,1
generator,1
else{,1
r=0;,1
point_value;,1
cat,1
a2,1
res;,1
caused,1
required,1
